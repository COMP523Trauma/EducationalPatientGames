{
    "project": {},
    "files": {
        "game1\\game1.js": {
            "name": "game1\\game1.js",
            "modules": {},
            "classes": {
                "game1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "game1\\preload1.js": {
            "name": "game1\\preload1.js",
            "modules": {},
            "classes": {
                "preload1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "game1\\title1.js": {
            "name": "game1\\title1.js",
            "modules": {},
            "classes": {
                "title1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "game1\\victory1.js": {
            "name": "game1\\victory1.js",
            "modules": {},
            "classes": {
                "victory1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "HTTPClient.js": {
            "name": "HTTPClient.js",
            "modules": {},
            "classes": {
                "HTTPClient": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "boot.js": {
            "name": "boot.js",
            "modules": {},
            "classes": {
                "boot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "game.js": {
            "name": "game.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "nodeServer.js": {
            "name": "nodeServer.js",
            "modules": {
                "nodeServer": 1
            },
            "classes": {
                "nodeServer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "wrapper.js": {
            "name": "wrapper.js",
            "modules": {
                "game": 1
            },
            "classes": {
                "wrapper": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "game": {
            "name": "game",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "wrapper": 1,
                "game1": 1,
                "preload1": 1,
                "title1": 1,
                "victory1": 1,
                "HTTPClient": 1,
                "boot": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "wrapper.js",
            "line": 2,
            "description": "wrapper class. The wrapper object, first displayed screen"
        },
        "nodeServer": {
            "name": "nodeServer",
            "submodules": {},
            "classes": {
                "nodeServer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "nodeServer.js",
            "line": 6,
            "description": "Server module"
        }
    },
    "classes": {
        "game1": {
            "name": "game1",
            "shortname": "game1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "game1\\game1.js",
            "line": 2,
            "description": "Game1 class. The game1 object, primary state of the game, handles all actual gameplay."
        },
        "preload1": {
            "name": "preload1",
            "shortname": "preload1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "game1\\preload1.js",
            "line": 2,
            "description": "preload1 class. The preload object, first state of the game, preloads all necessary assets"
        },
        "title1": {
            "name": "title1",
            "shortname": "title1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "game1\\title1.js",
            "line": 2,
            "description": "title1 class. The title1 object, just displays title screen"
        },
        "victory1": {
            "name": "victory1",
            "shortname": "victory1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "game1\\victory1.js",
            "line": 2,
            "description": "Victory1 class. The victory1 object, final state of the game"
        },
        "HTTPClient": {
            "name": "HTTPClient",
            "shortname": "HTTPClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "HTTPClient.js",
            "line": 1,
            "description": "HTTPClient Functionality"
        },
        "boot": {
            "name": "boot",
            "shortname": "boot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "file": "boot.js",
            "line": 2,
            "description": "boot class. The boot object, boot state of the game"
        },
        "nodeServer": {
            "name": "nodeServer",
            "shortname": "nodeServer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nodeServer",
            "namespace": "",
            "file": "nodeServer.js",
            "line": 6,
            "description": "Server Class"
        },
        "wrapper": {
            "name": "wrapper",
            "shortname": "wrapper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "game",
            "namespace": "",
            "file": "wrapper.js",
            "line": 2,
            "description": "wrapper class. The wrapper object, first displayed screen"
        }
    },
    "classitems": [
        {
            "file": "game1\\game1.js",
            "line": 8,
            "description": "phaser create function  -- initializes the game state, initialize game map, sounds, text messages, and clock. Starts spawners. Creates shifters for path manipulation.",
            "itemtype": "method",
            "name": "create",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 104,
            "description": "Pauses the game, shows instruction screen",
            "itemtype": "method",
            "name": "pauseGame",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 114,
            "description": "Unpauses the game, removes the instruction screen",
            "itemtype": "method",
            "name": "unpauseGame",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 125,
            "description": "Functionality called every time game updates. Moves sprites, checks collision, updates time\nPrecondition: Game created and exists",
            "itemtype": "method",
            "name": "update",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 222,
            "description": "Called when clicking an already safe sprite, gives warning message\nPrecondition: Sprite exists and is safe\nPostcondition: Sprite exists and is still safe",
            "itemtype": "method",
            "name": "onSafeClick Function to execute when safe sprite is clicked",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite object that is being clicked"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 246,
            "description": "make an unsafe child sprite into a safe child sprite after being clicked\nPrecondition: Sprite exists and is unsafe\nPostcondition: Sprite is replaced by safe sprite",
            "itemtype": "method",
            "name": "onUnsafeClick Function to be executed when an unsafe sprite is clicked",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite object that is being clicked"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 272,
            "description": "Called when player \"wins\" the game\nPostcondition: game is now in victory1 state",
            "itemtype": "method",
            "name": "victory",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 288,
            "description": "Function for placing random children -- NO LONGER USED BUT MAINTAINED FOR FUTURE",
            "itemtype": "method",
            "name": "placeRandomChildren",
            "params": [
                {
                    "name": "group",
                    "description": "Group the children will belong to"
                },
                {
                    "name": "spriteName",
                    "description": "Name of the sprite used for the children"
                },
                {
                    "name": "listener",
                    "description": "Function to be executed when children are clicked"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 310,
            "description": "function for creating a sprite spawner",
            "itemtype": "method",
            "name": "startSpawn",
            "params": [
                {
                    "name": "timeDelay",
                    "description": "time between each sprite in seconds"
                },
                {
                    "name": "x",
                    "description": "x coordinate"
                },
                {
                    "name": "y",
                    "description": "y coordinate"
                },
                {
                    "name": "direction",
                    "description": "direction sprite will move in"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 325,
            "description": "Modifies the clock time of the game\nPostcondition: timeRemaining is one less",
            "itemtype": "method",
            "name": "updateTime",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 336,
            "description": "function to pick a random sprite from the 3 safe and 3 unsafe sprites. Gives x,y coordinate and direction to move in\nPrecondition: startx, starty are valid positive integers, and direction is \"up\" \"down\" \"left\" \"right\" \"up-left\" \"up-right\" \"down-left\" \"down-right\"",
            "itemtype": "method",
            "name": "createRandomChild",
            "params": [
                {
                    "name": "startx",
                    "description": "x coordinate"
                },
                {
                    "name": "starty",
                    "description": "y coordinate"
                },
                {
                    "name": "direction",
                    "description": "direction the child will move in"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 382,
            "description": "function to create a child, called by create random child. Gives x y coordinates, direction to move in, group belongs to, name of image, and function to call when clicked\nPrecondition: startx, starty are valid positive integers, and direction is \"up\" \"down\" \"left\" \"right\" \"up-left\" \"up-right\" \"down-left\" \"down-right\" group is a valid child group, spriteName is a valid sprite, and listener is a valid function call\nPostcondition: Group size is increased by one",
            "itemtype": "method",
            "name": "createChild",
            "params": [
                {
                    "name": "startx",
                    "description": "x coordinate"
                },
                {
                    "name": "starty",
                    "description": "y coordinate"
                },
                {
                    "name": "direction",
                    "description": "direction the child will move in"
                },
                {
                    "name": "group",
                    "description": "group the child will belong to"
                },
                {
                    "name": "spriteName",
                    "description": "name of the sprite the child will use"
                },
                {
                    "name": "listener",
                    "description": "function to be executed when sprite is clicked"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 429,
            "description": "Makes sprite red",
            "itemtype": "method",
            "name": "flashRed",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 438,
            "description": "Returns a sprite to its original color after flashing red",
            "itemtype": "method",
            "name": "restoreColor",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 447,
            "description": "Starts the sprite flashing red to warn player",
            "itemtype": "method",
            "name": "startRed",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 455,
            "description": "Tells a sprite object to move in its current direction\nPrecondition: child has a valid direction to move in and a valid velocity to move by",
            "itemtype": "method",
            "name": "move",
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 490,
            "description": "creates a shifter sprite at (x, y), which will change the direction of any player sprite it collides with. Warning flag if turns sprite red\nPrecondition: x,y are valid positive integers, and newDirection is \"up\" \"down\" \"left\" \"right\" \"up-left\" \"up-right\" \"down-left\" \"down-right\".",
            "itemtype": "method",
            "name": "createShifter",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate"
                },
                {
                    "name": "y",
                    "description": "y coordinate"
                },
                {
                    "name": "newDirection",
                    "description": "Direction the shifter will force sprites to move. May be \"up\" \"down\" \"left\" \"right\" \"up-left\" \"up-right\" \"down-left\" \"down-right\""
                },
                {
                    "name": "warning",
                    "description": "boolean value whether a sprite will turn red when passing through the shifter"
                },
                {
                    "name": "randomShift",
                    "description": "boolean value whether shifter will randomly choose direction"
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 521,
            "description": "shifts the direction of a sprite based on the direction of the shifter \nPrecondition: sprite and shifter both have valid directions",
            "itemtype": "method",
            "name": "shiftDirection",
            "params": [
                {
                    "name": "sprite",
                    "description": ""
                },
                {
                    "name": "shifter",
                    "description": ""
                }
            ],
            "class": "game1"
        },
        {
            "file": "game1\\game1.js",
            "line": 551,
            "description": "Function I was using to check what unsafe children were still alive to monitor killing the offscreen children",
            "itemtype": "method",
            "name": "announceLiving",
            "class": "game1"
        },
        {
            "file": "game1\\preload1.js",
            "line": 9,
            "description": "phaser preload function  -- loads in all necessary assets (images, sprites, spritesheets, audio) for use in the other game states",
            "itemtype": "method",
            "name": "preload",
            "class": "preload1"
        },
        {
            "file": "game1\\preload1.js",
            "line": 33,
            "description": "phaser create function  -- loads next state, the title screen",
            "itemtype": "method",
            "name": "create",
            "class": "preload1"
        },
        {
            "file": "game1\\title1.js",
            "line": 8,
            "description": "phaser create function  -- initializes the title state, displays title screen and play button.",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": ""
            },
            "class": "title1"
        },
        {
            "file": "game1\\title1.js",
            "line": 30,
            "description": "playGame function that begins the gameplay state Game1",
            "itemtype": "method",
            "name": "playGame",
            "return": {
                "description": ""
            },
            "class": "title1"
        },
        {
            "file": "game1\\victory1.js",
            "line": 9,
            "description": "phaser create function  -- initializes the victory state, initialize victory image, text messages, and scores. Starts spawners. Creates",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": ""
            },
            "class": "victory1"
        },
        {
            "file": "HTTPClient.js",
            "line": 7,
            "description": "HTTPClient Functionality",
            "itemtype": "method",
            "name": "HTTPClient",
            "params": [
                {
                    "name": "server",
                    "description": "the server object connecting to"
                },
                {
                    "name": "port",
                    "description": "port connecting through"
                }
            ],
            "class": "HTTPClient"
        },
        {
            "file": "HTTPClient.js",
            "line": 17,
            "description": "HTTPClient get",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "server",
                    "description": "the server object connecting to"
                },
                {
                    "name": "processGet",
                    "description": "function to process Get request"
                }
            ],
            "class": "HTTPClient"
        },
        {
            "file": "HTTPClient.js",
            "line": 26,
            "description": "On state change execute this",
            "itemtype": "method",
            "name": "onreadystatechange",
            "class": "HTTPClient"
        },
        {
            "file": "HTTPClient.js",
            "line": 39,
            "description": "Process get request",
            "itemtype": "method",
            "name": "processGet function to process Get request",
            "params": [
                {
                    "name": "response",
                    "description": "Response printed after processing Get"
                }
            ],
            "class": "HTTPClient"
        },
        {
            "file": "boot.js",
            "line": 7,
            "description": "initialize",
            "itemtype": "method",
            "name": "init",
            "class": "boot"
        },
        {
            "file": "boot.js",
            "line": 27,
            "description": "Phaser create function, starts next state \"Wrapper\"",
            "itemtype": "method",
            "name": "create",
            "class": "boot"
        },
        {
            "file": "boot.js",
            "line": 37,
            "description": "fixes orientation of game",
            "itemtype": "method",
            "name": "enterIncorrectOrientation",
            "return": {
                "description": ""
            },
            "class": "boot"
        },
        {
            "file": "boot.js",
            "line": 48,
            "description": "preserves orientation of game",
            "itemtype": "method",
            "name": "leaveIncorrectOrientation",
            "class": "boot"
        },
        {
            "file": "nodeServer.js",
            "line": 81,
            "description": "Write records",
            "itemtype": "method",
            "name": "insertDocuments",
            "params": [
                {
                    "name": "db",
                    "description": "the database to be inserted into"
                },
                {
                    "name": "collection",
                    "description": "the collection in the database"
                },
                {
                    "name": "data",
                    "description": "the data to be inserted"
                },
                {
                    "name": "response",
                    "description": "the response of the communication"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "nodeServer",
            "module": "nodeServer"
        },
        {
            "file": "nodeServer.js",
            "line": 100,
            "description": "Retrieve records",
            "itemtype": "method",
            "name": "retrieveDocuments",
            "params": [
                {
                    "name": "db",
                    "description": "the database to be inserted into"
                },
                {
                    "name": "collection",
                    "description": "the collection in the database"
                },
                {
                    "name": "response",
                    "description": "the reponse of the communication"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "nodeServer",
            "module": "nodeServer"
        },
        {
            "file": "wrapper.js",
            "line": 9,
            "description": "Phaser preload function. Preloads assets needed for wrapper",
            "itemtype": "method",
            "name": "preload",
            "return": {
                "description": ""
            },
            "class": "wrapper",
            "module": "game"
        },
        {
            "file": "wrapper.js",
            "line": 20,
            "description": "Phaser create function. Adds images needed for wrapper",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "returns boolean true if image successfully loads, false otherwise"
            },
            "class": "wrapper",
            "module": "game"
        },
        {
            "file": "wrapper.js",
            "line": 56,
            "description": "Function to start next state of game, \"Preload1\"",
            "itemtype": "method",
            "name": "captainSafetySelect",
            "class": "wrapper",
            "module": "game"
        }
    ],
    "warnings": []
}